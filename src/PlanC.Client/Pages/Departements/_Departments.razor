@page "/departements"
@using Microsoft.AspNetCore.Components
@inject PCU001Context context
@inject NavigationManager _NavigationManager
@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Buttons
@using PlanC.EntityDataModel
@using Syncfusion.EJ2.Blazor.Navigations
<!-- Section de navigation -->
<div class="row mb-3">
    <div class="col">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/portail"> Portail </a></li>
                <li style="padding: 0 4px;"><i class="fas fa-home" style="font-size: 15px; color: #3f51b5;"></i></li>
                <li class="breadcrumb-item"><i class="fas fa-circle" style="font-size: 5px; vertical-align: middle; padding-right: 2px;"></i></li>
                <li class="breadcrumb-item active" aria-current="page"> Départements </li>
            </ol>
        </nav>
    </div>
    <!-- Message distiné pour le groupe d'administration -->
    <div class="col-12">
        <div class="alert alert-light show shadow" role="alert">
            <div class="alert-icon text-warning">
                <i class="fas fa-exclamation-triangle"></i>
            </div>
            <div class="alert-text">
                Vous devez avoir la dernière version de votre plan de cours pour le 26 septembre.
            </div>
        </div>
    </div>
</div>

<div id="loaderDepart" class="row" style="display: none;">
    <div class="col-12 text-center">
        <img src="/lib/loader/puff-light.svg" height="350" alt="">
    </div>
</div>

<!-- Container pour blazor component -->
<div class="row justify-content-center">
    <!-- Affiche tous les départements -->
    <div class="col-12" hidden="@(formLoadDisplay)">
        <EjsButton @onclick="ToggleForm">Ajout d'un département</EjsButton>
        <br />
        @if (departements != null)
        {
            <EjsGrid DataSource="@departements" AllowSorting="true" AllowPaging="true"
                     ContextMenuItems="@(new List<ContextMenuItemModel>() {
                                                 new ContextMenuItemModel { Text = "Voir le département", Target = ".e-content", Id = "open" }
                                             })">
                <GridEditSettings AllowAdding="true" AllowDeleting="true"></GridEditSettings>
                <GridPageSettings PageSize="8"></GridPageSettings>
                <!-- Les événements se passant sur la table et les paramètre -->
                <GridEvents ContextMenuItemClicked="OnContextMenuClick" RowSelected="RowSelectHandler" RowDeselected="() => Selected = null" TValue="Departements"></GridEvents>
                <GridColumns>
                    <GridColumn IsPrimaryKey="true" Field=@nameof(Selected.Id) HeaderText="Identifiant du cours"></GridColumn>
                    <GridColumn Field=@nameof(Selected.Titre) HeaderText="Identifiant du programme"></GridColumn>
                    <GridColumn Field=@nameof(Selected.RcdCdttm) HeaderText="Date du dernier enregistrement" Format="yMd" Type=ColumnType.Date></GridColumn>
                </GridColumns>
            </EjsGrid>
        }
        else if (loadFailed)
        {
            <a href="" class="reload">Recharger la page</a>
        }
        else
        {
            <h1>En chargement...</h1>
        }
    </div>
    <div class="col-12" hidden="@(!formLoadDisplay)">
        <EjsButton @onclick="ToggleForm">Fermer</EjsButton>
        <TDepartements IsEditable="true"></TDepartements>
    </div>
</div>
<div class="col-12 text-center">
    <span class="smallerFontSize">La page ne répond pas? <a href="/departements" onclick="window.location.reload()" class="reload">Rafraîchir la page.</a></span>
</div>

@code {
    protected List<Departements> departements;
    protected Departements Selected;
    //safe check si la list à eu une erreur pour demander à l'usager de reload
    private bool loadFailed;
    private bool formLoadDisplay = false;

    protected override void OnInitialized()
    {
        departements = context.Departements.OrderBy(e => e.Id).ToList();
    }

    public void ToggleForm() 
    {
        formLoadDisplay = !formLoadDisplay;
    }

    public void RowSelectHandler(RowSelectEventArgs<Departements> args)
    {
        Selected = departements.FirstOrDefault(e => e.Id == args.Data.Id);
    }

    public void OnContextMenuClick(MenuEventArgs args)
    {
        if (args.Item.Id == "open")
        {
            _NavigationManager.NavigateTo($"/departements/{Selected.Id}");
        }
    }
}