@page "/profil/configuration"
@using Microsoft.EntityFrameworkCore;
@inject IJSRuntime JSRuntime
@inject PCU001Context context
@inherits Usager
@using PlanC.Client.Pages.Profils


@if (!String.IsNullOrEmpty(StatusMessage))
{
    var statusMessageClass = StatusMessage.StartsWith("Erreur") ? "danger" : "success";
    <div class="alert alert-@statusMessageClass alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        @StatusMessage
    </div>
}
<div class="row justify-content-center">
    <div class="col-md-12" style="margin-bottom: 200px;">
        <div class="row">
            <div class="nav flex-row nav-pills col-md-4" id="v-pills-tab" role="tablist" aria-orientation="horizontal">
                <span @onclick="() => currentControl = 1" class="nav-link active" id="v-pills-profile-tab" data-toggle="pill" href="#v-pills-profile" role="tab" aria-controls="v-pills-profile" aria-selected="false">Profile</span>
                <span @onclick="() => currentControl = 2" class="nav-link" id="v-pills-disponibility-tab" data-toggle="pill" href="#v-pills-disponibility" role="tab" aria-controls="v-pills-disponibility" aria-selected="false">Disponibilités</span>
                <span @onclick="() => currentControl = 3" class="nav-link" id="v-pills-settings-tab" data-toggle="pill" href="#v-pills-settings" role="tab" aria-controls="v-pills-settings" aria-selected="false">Paramètres personnels</span>
            </div>
            <div class="tab-content col-md-12" id="v-pills-tabContent">
                <div class="tab-pane fade active show" id="v-pills-profile" role="tabpanel" aria-labelledby="v-pills-profile-tab">
                    @if (user != null && currentControl == 1)
                    {
                        <!-- configuration du profil utilisateur -->
                        <div class="row justify-content-center">
                            <div class="col-md-6">
                                <h4 style="text-align: center;">
                                    Configuration du profil.
                                </h4>
                                <!-- formulaire pour le numéro de poste et de son email-->
                                <EditForm Model="Input" id="numero" OnValidSubmit="PostPublicAsync">                                    
                                    <DataAnnotationsValidator />
                                    <label class="control-label"> Numéro d'usagé: </label>
                                    <input placeholder="... .. ." value="@Username" class="form-control" disabled />
                                    <label class="control-label pt-3"> Numéro de poste: </label>
                                    <InputText placeholder=".. ... ." @bind-Value="Input.PhoneNumber" class="form-control" />
                                    <span class="text-danger">
                                        <ValidationMessage For="(() => Input.PhoneNumber)"></ValidationMessage>
                                    </span>
                                    <label class="control-label pt-3"> Département: </label>
                                    <InputSelect placeholder=".. ... ." @bind-Value="Input.Département" class="form-control">
                                        <option></option>
                                        @foreach (var Departement in GetDepartements)
                                            {
                                            <option value="@Departement.Id">@Departement.Titre</option>
                                            }
                                        /**/
                                    </InputSelect>
                                    <span class="text-danger">
                                        <ValidationMessage For="(() => Input.Département)"></ValidationMessage>
                                    </span>
                                    <label class="control-label pt-3"> Email: </label>
                                    <InputText placeholder=".. ... ." @bind-Value="Input.NewEmail" class="form-control" />
                                    <span class="text-danger">
                                        <ValidationMessage class="text-danger" For="(() => Input.NewEmail)"></ValidationMessage>
                                    </span>
                                    <button id="update-profile-button" type="submit" class="btn btn-primary mt-3">Sauvegarder</button>
                                </EditForm>
                            </div>
                        </div>
                        <!-- configuration de la sécurité -->
                        <div class="row justify-content-center">
                            <div class="col-md-6">
                                <hr style="margin-top: 3rem;">
                                <h4 style="text-align:center;">Sécurité</h4>
                                <EditForm Model="InputPassword" id="password" OnValidSubmit="PostPasswordAsync">
                                    <DataAnnotationsValidator />
                                    <label class="control-label"> Vieux mot de passe: </label>
                                    <InputText @bind-Value="InputPassword.OldPassword" class="form-control" />
                                    <span class="text-danger">
                                        <ValidationMessage class="text-danger" For="(() => InputPassword.OldPassword)"></ValidationMessage>
                                    </span>
                                    <label class="control-label pt-3"> Nouveau mot de passe: </label>
                                    <InputText @bind-Value="InputPassword.NewPassword" class="form-control" />
                                    <span class="text-danger">
                                        <ValidationMessage class="text-danger" For="(() => InputPassword.NewPassword)"></ValidationMessage>
                                    </span>
                                    <label class="control-label pt-3"> Confirmation mot de passe: </label>
                                    <InputText @bind-Value="InputPassword.ConfirmPassword" class="form-control" />
                                    <span class="text-danger">
                                        <ValidationMessage class="text-danger" For="(() => InputPassword.ConfirmPassword)"></ValidationMessage>
                                    </span>
                                    <button id="update-password-button" type="submit" class="btn btn-primary mt-3">Sauvegarder</button>
                                </EditForm>
                            </div>
                        </div>
                    }
                </div>
                <div class="tab-pane fade" id="v-pills-disponibility" role="tabpanel" aria-labelledby="v-pills-disponibility-tab">
                    <div class="row justify-content-center">
                        <div class="col-md-12">
                            <h4 style="text-align:center;">Horaire de l'utilisateur</h4>
                            @if (user != null && currentControl == 2)
                            {
                                <CascadingValue TValue="AspNetUsers" Value="user">
                                    <Horaire></Horaire>
                                </CascadingValue>
                            }
                        </div>
                    </div>
                </div>
                <!-- configuration générale profil utilisateur personnel -->
                <div class="tab-pane fade" id="v-pills-settings" role="tabpanel" aria-labelledby="v-pills-settings-tab">
                    <div class="col-md-12">
                        <h4 style="text-align: center;">
                            Personnalisation du profil.
                        </h4>
                        <EditForm Model="InputPerson" id="personnalData" OnValidSubmit="PostPersonnalDataAsync">
                            <DataAnnotationsValidator />
                            <label for="Username" class="control-label"> Prénom: </label>
                            <InputText @bind-Value="InputPerson.Prénom" class="form-control" />
                            <span class="text-danger">
                                <ValidationMessage class="text-danger" For="(() => InputPerson.Prénom)"></ValidationMessage>
                            </span>
                            <label for="phonenumeber" class="control-label pt-3"> Nom de famille: </label>
                            <InputText @bind-Value="InputPerson.Nom" class="form-control" />
                            <span class="text-danger">
                                <ValidationMessage class="text-danger" For="(() => InputPerson.Nom)"></ValidationMessage>
                            </span>
                            <label for="phonenumeber" class="control-label pt-3"> Choix de l'image de profil: </label>
                            <InputNumber hidden @bind-Value="InputPerson.ImageProfilChoice" class="form-control" />
                            <!-- sélection de la photo de profil -->
                            <div class="btn-group-toggle" data-toggle="buttons">
                                <label @onclick="() => InputPerson.ImageProfilChoice = 0" class="btn btn-secondary @(InputPerson.ImageProfilChoice != 0 ? "" : "active")">
                                    <img height=50 width=50 src="/images/avatars/0.svg" type="radio">
                                </label>
                                <label @onclick="() => InputPerson.ImageProfilChoice = 1" class="btn btn-secondary @(InputPerson.ImageProfilChoice != 1 ? "" : "active")">
                                    <img height=50 width=50 src="/images/avatars/1.svg" type="radio">
                                </label>
                                <label @onclick="() => InputPerson.ImageProfilChoice = 2" class="btn btn-secondary @(InputPerson.ImageProfilChoice != 2 ? "" : "active")">
                                    <img height=50 width=50 src="/images/avatars/2.svg" type="radio">
                                </label>
                                <label @onclick="() => InputPerson.ImageProfilChoice = 3" class="btn btn-secondary @(InputPerson.ImageProfilChoice != 3 ? "" : "active")">
                                    <img height=50 width=50 src="/images/avatars/3.svg" type="radio">
                                </label>
                                <label @onclick="() => InputPerson.ImageProfilChoice = 4" class="btn btn-secondary @(InputPerson.ImageProfilChoice != 4 ? "" : "active")">
                                    <img height=50 width=50 src="/images/avatars/4.svg" type="radio">
                                </label>
                                <label @onclick="() => InputPerson.ImageProfilChoice = 5" class="btn btn-secondary @(InputPerson.ImageProfilChoice != 5 ? "" : "active")">
                                    <img height=50 width=50 src="/images/avatars/5.svg" type="radio">
                                </label>
                                <label @onclick="() => InputPerson.ImageProfilChoice = 6" class="btn btn-secondary @(InputPerson.ImageProfilChoice != 6 ? "" : "active")">
                                    <img height=50 width=50 src="/images/avatars/6.svg" type="radio">
                                </label>
                                <label @onclick="() => InputPerson.ImageProfilChoice = 7" class="btn btn-secondary @(InputPerson.ImageProfilChoice != 7 ? "" : "active")">
                                    <img height=50 width=50 src="/images/avatars/7.svg" type="radio">
                                </label>
                                <label @onclick="() => InputPerson.ImageProfilChoice = 8" class="btn btn-secondary @(InputPerson.ImageProfilChoice != 8 ? "" : "active")">
                                    <img src="/images/avatars/8.svg" type="radio">
                                </label>
                                <label @onclick="() => InputPerson.ImageProfilChoice = 9" class="btn btn-secondary @(InputPerson.ImageProfilChoice != 9 ? "" : "active")">
                                    <img src="/images/avatars/9.svg" type="radio">
                                </label>
                            </div>
                            <span class="text-danger">
                                <ValidationMessage class="text-danger" For="(() => InputPerson.ImageProfilChoice)"></ValidationMessage>
                            </span>
                            <button id="update-personnal-button" type="submit" class="btn btn-primary mt-3">Sauvegarder</button>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-12 text-center">
    <span class="smallerFontSize">La page ne répond pas? <a href="/profil/configuration" onclick="window.location.reload()" class="reload">Rafraîchir la page.</a></span>
</div>


@code {
    private string internal_link => "/Account/Manage";
    public int currentControl;
    public int[] profilImageChoice { get; set; } = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };

    protected override void OnInitialized()
    {
        // initialize la liste, indiquant la séquence ou se trouve la personne
        currentControl = 1;

        Input = new InputModel();
        InputPassword = new InputPasswordModel();
        InputPerson = new InputPersonnalData();        
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // obtient l'utilisateur pour le render de la page et des configuration
            var _user = _userManager.GetUserName((await authenticationStateTask).User);

            if (string.IsNullOrEmpty(_user))
                NavigationManager.NavigateTo("/error");

            user = context.AspNetUsers
                .First(e => e.UserName == _user);

            if (user == null)
            {
                StatusMessage = $"Impossible de trouver l'utlisateur ayant le ID '{Username}'.";
            }

            // obtention des différentes image sauvegarder

            // préparation de la présentation
            Username = user.UserName;
            Input.NewEmail = user.Email;
            Input.PhoneNumber = user.PhoneNumber;
            Input.Campus = user.Campus;
            Input.Département = user.DepartementId.GetValueOrDefault().ToString();
            InputPerson.Nom = user.GvnNm;
            InputPerson.Prénom = user.Snm;
            InputPerson.ImageProfilChoice = user._ImageProfilChoice;
            // affichage refresh sur cette page
            StateHasChanged();
        }
    }
}