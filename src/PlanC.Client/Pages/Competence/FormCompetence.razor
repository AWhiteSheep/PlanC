@using Newtonsoft.Json
@page "/departement/{departementId:int}/competence/create"
@page "/departement/{departementId:int}/competence/{competenceId}/create"
@layout MultiFormLayout
@inherits FormCompetenceBase

<!-- Section de navigation -->
<div class="row mb-3">
    <div class="col">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <!-- Donne accès au portail selon le role de l'utilisateur -->
                <li class="breadcrumb-item"><a href="/"> Portail </a></li>
                <li style="padding: 0 4px;"><i class="fas fa-home" style="font-size: 15px; color: #3f51b5;"></i></li>
                <li class="breadcrumb-item"><i class="fas fa-circle" style="font-size: 5px; vertical-align: middle; padding-right: 2px;"></i></li>
                <li class="breadcrumb-item"><a href="/Departement"> Département </a></li>
                <li class="breadcrumb-item"><i class="fas fa-circle" style="font-size: 5px; vertical-align: middle; padding-right: 2px;"></i></li>
                <li class="breadcrumb-item"><a href="/Departement/@departementId"> @departement.Titre </a></li>
                <li class="breadcrumb-item"><i class="fas fa-circle" style="font-size: 5px; vertical-align: middle; padding-right: 2px;"></i></li>
                <li class="breadcrumb-item"><a href="/Departement/@departementId/Competence"> Compétences </a></li>
                <li class="breadcrumb-item"><i class="fas fa-circle" style="font-size: 5px; vertical-align: middle; padding-right: 2px;"></i></li>
                <li class="breadcrumb-item active" aria-current="page"> Nouvelle compétence </li>
            </ol>
        </nav>
    </div>
</div>


<!-- Formulaire d'un nouveau plan-cadre -->
<div class="container shadow p-5">
    <div class="row">
        <!-- Valeur pour le titre du plan-cadre -->
        <div class="col-12">
            <h3>Département: @departement.Titre</h3>
        </div>
    </div>
    @*Envoit le paramètre à tous les enfants*@
    <CascadingValue TValue="PCU001Context" Value="context">
    <CascadingValue TValue="Competences" Value="skill">
        <CascadingValue TValue="List<Departements>" Value="departements">
            <CascadingValue TValue="bool" Value="isEditing">
                @switch (CurrentStep)
                {
                    @case 1:
                        <!-- STEP 1: Création de toute information de base-->
                        <EditFormCompetence departementId="@departementId" competenceId="@competenceId"
                                CompetenceForm="CompetenceForm" NextStepTrigger="StepContextRealisation"></EditFormCompetence>
                    break;
                    case 2:
                        <!--  STEP 2:  Ajout de contextes de  réalisations -->
                        <EditFormContextRealisation NextStepTrigger="StepElementCompétence"></EditFormContextRealisation>
                    break;
                    case 3:
                        <!-- STEP 3: Ajout des éléments de compétences -->
                        <EditFormElement NextStepTrigger="StepConfirmation"></EditFormElement>
                    break;
                case 4:
                        <!-- Confirmation, overview et empreinte de la date -->
                        <FormCompetenceReview></FormCompetenceReview>
                    break;
            }
            </CascadingValue>
        </CascadingValue>
    </CascadingValue>
    </CascadingValue>


</div>

@code {
    // switch à la création des contextes de réalisation
    public void StepContextRealisation() {
        CurrentStep = 2; // go to step 2 normally
        StateHasChanged();
    }

    // switch à la création des contextes de réalisation
    public void StepElementCompétence() {        
        CurrentStep = 3;
        StateHasChanged();
    }

    // switch à la confirmation de plan de cadre complété
    public void StepConfirmation() {        
        CurrentStep = 4;
        StateHasChanged();
    }

}
