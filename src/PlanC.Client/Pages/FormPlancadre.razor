@page "/programme/{id}/create"

@using PlanC.EntityDataModel
@using Components;
@inject NavigationManager NavigationManager
@inject PCU001Context context

<!-- Section de navigation -->
<div class="row mb-3">
    <div class="col">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <!-- Donne accès au portail selon le role de l'utilisateur -->
                <li class="breadcrumb-item"><a href="/"> Portail </a></li>
                <li style="padding: 0 4px;"><i class="fas fa-home" style="font-size: 15px; color: #3f51b5;"></i></li>
                <li class="breadcrumb-item"><i class="fas fa-circle" style="font-size: 5px; vertical-align: middle; padding-right: 2px;"></i></li>
                <li class="breadcrumb-item"><a href="/Programme"> Programmes </a></li>
                <li class="breadcrumb-item"><i class="fas fa-circle" style="font-size: 5px; vertical-align: middle; padding-right: 2px;"></i></li>
                <li class="breadcrumb-item"><a href="/Programme/@Id"> @program.Designation </a></li>
                <li class="breadcrumb-item"><i class="fas fa-circle" style="font-size: 5px; vertical-align: middle; padding-right: 2px;"></i></li>
                <li class="breadcrumb-item active" aria-current="page"> Nouveau plan cadre </li>
            </ol>
        </nav>
    </div>
</div>

<!-- Formulaire d'un nouveau plan-cadre -->
<div class="container">
    <div class="row">
        <div class="col-lg-4">
            <PlanC.Client.Components.DropdownProgramSelection @ref="programDropdown" CurrentSelection="program"/>
        </div>
    </div>
    <div class="row">
        <!-- Valeur pour le titre du plan-cadre -->
        <div class="col-12">
            <div class="form-group">
                <label class="control-label" for="CrsTitle"> Titre du du programme: </label>
                <input readonly type="text" class="form-control" placeholder="Nom du programme" value="@program.ToString()" />
            </div>
        </div>
    </div>
    <div class="row">
        <!-- Valeur pour le titre du plan-cadre -->
        <div class="col-lg-6">
            <div class="form-group">
                <label class="control-label" for="CrsTitle"> Titre du cours: </label>
                <input type="text" class="form-control" placeholder="Titre du cours" value="@CTemplate.DenominationCours" />
            </div>
        </div>
        <!-- Valeur pour l'identification du cours -->
        <div class="col-lg-6">
            <div class="form-group">
                <label class="control-label" for="CrsId"> Identifiant du cours: </label>
                <input type="text" class="form-control" placeholder="Id du cours" value="@CTemplate.CoursId" />
            </div>
        </div>
    </div>
    <div class="row">
        <!-- Nombre d'unités pour le cours données -->
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label" for="Units"> Nombre d'unités: </label>
                <input Mask="00000" @bind="CTemplate.Unites" class="theme-mask" id="Units" placeholder="Nombre d'unité" />
            </div>
        </div>
        <!-- Ajout de la pondération -->
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label" for="Ponderation"> Pondération du cours: </label>
                <div class="row">
                    <div class="col-1">
                        <input Mask="00" class="theme-mask" placeholder="##" name="HeuresTotalesThéories" @bind="CTemplate.HeuresTotalesTheorie" />
                    </div>
                    <div class="col-1">
                        <input Mask="00" class="theme-mask" placeholder="##" name="HeuresTotalesPratiques" @bind="CTemplate.HeuresTotalesPratique" />
                    </div>
                    <div class="col-1">
                        <input Mask="00" class="theme-mask" placeholder="##" name="HeuresTotalesMaison" @bind="CTemplate.HeuresTotalesMaison" />
                    </div>
                </div>
            </div>
        </div>
        <!-- Séparateur -->
        <hr />
        <div class="col-12">
            <!-- Descriptions du cours -->
            <div class="form-group">
                <label class="control-label col-12" for="CrsDesc">Description du cours: </label>
                <textarea @bind="CTemplate.Description" rows="4" class="form-control" id="CrsIntent" placeholder="Description du cours..." name="CrsDesc" />
            </div>
        </div>
        <div class="col-12">
            <!-- les intentions du cours -->
            <div class="form-group">
                <label class="control-label" for="CrsIntent">Intention du cours: </label>
                <textarea @bind="CTemplate.IntentionEducative" rows="4" class="form-control" id="CrsIntent" placeholder="Intention éducative..." name="CrsIntent" />
            </div>
        </div>
        <div class="col-12">
            <!-- Entrés pour les intentions pédagogiques du cours -->
            <div class="form-group">
                <label class="control-label" for="IntentionPedagogique">Intention du pédagogique: </label>
                <textarea @bind="CTemplate.IntentionPedagogique" rows="4" class="form-control" id="IntentionPedagogique" placeholder="Ingore It" name="IntentionPedagogique" />
            </div>
        </div>
        <!--href="/planscadres/nouveau/ponderation"-->
        <div class="col-12">
            <!--href="/planscadres/nouveau/ponderation"-->
            <button class="btn btn-dark" @onclick="HandleValidSubmit">Continuer</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; }
    public string tid { get; set; }
    public Programmes program;

    private DropdownProgramSelection programDropdown;
    private PlansCadres CTemplate = new PlansCadres();

    protected override void OnInitialized()
    {
        tid = Id.Replace('-', '.');
        program = context.Programmes.First(e => e.Id == tid);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            programDropdown.ValueChanged += UpdateProgram;
        }
    }

    private void UpdateProgram(object sender, Programmes arg)
    {
        program = arg;
        StateHasChanged();
    }

    // validation côté serveur
    private void HandleValidSubmit()
    {
        try
        {

        }
        catch
        {

        }
    }
}
