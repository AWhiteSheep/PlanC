@page "/plancours"
@using PlanC.Client.Data
@inject PCU001Context context
@using System.Linq
@inject NavigationManager _NavigationManager
@inject IJSRuntime Js
@using Syncfusion.EJ2.Blazor.Grids
@using Microsoft.AspNetCore.Components
@using Microsoft.JSInterop
@using PlanC.Client
@using PlanC.EntityDataModel
@using Syncfusion.EJ2.Blazor.Navigations
@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Buttons

<!--section sécurité doit être seulement coordonateur du programme et la consultation par le professeur-->
<!-- Section de navigation -->
<div class="row mb-3">
    <div class="col">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <!-- Donne accès au portail selon le role de l'utilisateur -->
                <li class="breadcrumb-item"><a href="/"> Portail </a></li>
                <li style="padding: 0 4px;"><i class="fas fa-home" style="font-size: 15px; color: #3f51b5;"></i></li>
                <li class="breadcrumb-item active" aria-current="page"> Visualisation des plans cadres </li>
            </ol>
        </nav>
    </div>
</div>

<div class="container shadow p-5">
    <div class="row">
        <div class="col-12">
            <h3>Liste des plans cadres:</h3>
        </div>
        <div class="col-12">
            <a href="/plancours/create">Nouveau plancadre</a>
            <br />
            @if (PlansCours != null)
            {
                <EjsGrid DataSource="@PlansCours" AllowSorting="true" AllowPaging="true"
                         ContextMenuItems="@(new List<ContextMenuItemModel>() {
                                                 new ContextMenuItemModel { Text = "Ouvrir plan cours", Target = ".e-content", Id = "open" },
                                                 new ContextMenuItemModel { Text = "Sauvegarder en tant que word", Target = ".e-content", Id = "word" }
                                             })">
                    <GridEditSettings AllowAdding="true" AllowDeleting="true"></GridEditSettings>
                    <GridPageSettings PageSize="8"></GridPageSettings>
                    <!-- Les événements se passant sur la table et les paramètre -->
                    <GridEvents ContextMenuItemClicked="OnContextMenuClick" RowSelected="RowSelectHandler" RowDeselected="() => Selected = null" TValue="PlansCours"></GridEvents>
                    <GridColumns>
                        <GridColumn IsPrimaryKey="true" Field=@nameof(Selected.CoursId) HeaderText="Identifiant du cours"></GridColumn>
                        <GridColumn Field=@nameof(Selected.CoursePolicy) HeaderText="Identifiant du programme"></GridColumn>
                        <GridColumn Field=@nameof(Selected.RcdCdttm) HeaderText="Date du dernier enregistrement" Format="yMd" Type=ColumnType.Date></GridColumn>
                    </GridColumns>
                </EjsGrid>
            }
            else if (loadFailed)
            {
                <a href="" class="reload">Recharger la page</a>
            }
            else
            {
                <h1>En chargement...</h1>
            }
        </div>
    </div>
</div>
<div class="col-12 text-center">
    <span class="smallerFontSize">La page ne répond pas? <a href="/planscadres" onclick="window.location.reload()" class="reload">Rafraîchir la page.</a></span>
</div>

@code {
    public List<PlanC.EntityDataModel.PlansCours>
    PlansCours { get; set; }
    public PlansCours Selected { get; set; }
    private bool loadFailed; //safe check si la list à eu une erreur pour demander à l'usager de reload

    protected override void OnInitialized()
    {
        // initialisation de la liste
        try
        {
            loadFailed = false;
            PlansCours = context.PlansCours.ToList();
        }
        catch (Exception ex)
        {
            loadFailed = true;
            Console.WriteLine("Failed to load {context}, {ex}", context, ex);
        }
    } 

    public void RowSelectHandler(RowSelectEventArgs<PlansCours> args)
    {
        Selected = PlansCours.FirstOrDefault(e => e.CoursId == args.Data.CoursId);
    }

    public void OnContextMenuClick(MenuEventArgs args)
    {
        if (args.Item.Id == "open")
        {
            _NavigationManager.NavigateTo($"/plancours/{Selected.CoursId}/create");
        }
    }
}


