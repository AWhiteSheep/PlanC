@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor.Data
@using Microsoft.EntityFrameworkCore
@inject PCU001Context _context
@inherits CoursePlanInputFormComponent

<label class="label-info">Choix de plan-cadre</label>
@*Menu déroulant portant la liste des plans-cadre.*@
<EjsComboBox TValue="PlansCadres" DataSource="Templates">
    <ComboBoxEvents TValue="string" ValueChange="SetTemplate"></ComboBoxEvents>
    <ComboBoxFieldSettings GroupBy="ProgrammeId" Value="CoursId" Text="DenominationCours"></ComboBoxFieldSettings>
</EjsComboBox>

@* Menu déroulant portant la liste des sessions enregistrées. *@
<label class="label-info">Choix de session</label>
<EjsComboBox TValue="Sessions" DataSource="Semesters">
    <ComboBoxEvents TValue="string" ValueChange="SetSemester"></ComboBoxEvents>
    <ComboBoxFieldSettings Value="Id" Text="Titre"></ComboBoxFieldSettings>
</EjsComboBox>

<textarea class="input text form-control" @bind="CoursePlan.CoursePolicy" placeholder="Copiez-collez les politiques de votre département"></textarea>

@code {
    private List<PlansCadres> Templates { get; set; } = new List<PlansCadres>();
    private List<Sessions> Semesters { get; set; } = new List<Sessions>();
    [Parameter]
    [Bindable(true)]
    public PlansCadres plCadreChooseen { get; set; }

    protected override void OnInitialized()
    {
        Templates = _context.PlansCadres.ToList();
        Semesters = _context.Sessions.ToList();
    }

    public async override Task<bool> SaveProgress()
    {
        try
        {
            if (!_context.PlansCours.Local.Contains(CoursePlan))
            {
                _context.PlansCours.Add(CoursePlan);
            }
            await _context.SaveChangesAsync();
            return true;
        }
        catch (Exception except)
        {
            Console.WriteLine($"Error saving plan template and policy -- {except.Message}");
            return false;
        }
    }

    public override string ToString()
    {
        return "Choix de cadre et politiques";
    }

    private void SetTemplate(ChangeEventArgs<string> args)
    {
        plCadreChooseen = _context.PlansCadres.Where(e => e.CoursId.Trim() == args.Value.Trim())
                .OrderByDescending(p => p.VsnCdttm).FirstOrDefault();
        CoursePlan.CoursId = args.Value;
        StateHasChanged();
    }

    private void SetSemester(ChangeEventArgs<string> args)
    {
        CoursePlan.SessionId = args.Value;
        StateHasChanged();
    }

    public override bool Validate()
    {
        if (String.IsNullOrEmpty(CoursePlan.CoursId) || CoursePlan.Session == null || String.IsNullOrEmpty(CoursePlan.CoursePolicy))
        {
            return false;
        }

        else return true;
    }
}
