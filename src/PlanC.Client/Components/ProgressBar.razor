<style>    
.container-bar {
  counter-reset: step;
  width: 680px;
  z-index: 1;
}

.progressbar li {
  float: left;
  width: 20%;
  position: relative;
  text-align: center;
}

.progressbar li::before {
  content: counter(step);
  counter-increment: step;
  width: 30px;
  height: 30px;
  border: 2px solid #bebebe;
  display: block;
  margin: 0 auto 10px auto;
  border-radius: 50%;
  line-height: 27px;
  background: white;
  color: #bebebe;
  text-align: center;
  font-weight: bold;
}
.progressbar li::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 3px;
  background: #979797;
  top: 15px;
  left: -50%;
  z-index: -1;
}
.progressbar li:first-child::after {
  content: none;
}
.progressbar li.active::after {
  background: #03A9F4;
}

.progressbar li.active::before {
  border-color: #03A9F4;
  background: #03A9F4;
  color: white
}
.progressbar li.current::after {
  background: #03A9F4;
}

.progressbar li.current::before {
  border-color: #673AB7;
  background: #673AB7;
  color: white
}
</style>

<div class="container-bar">
    <ul style="list-style-type: none" class="progressbar">
        @foreach (var step in steps)
        {
            <li class="@(steps.IndexOf(step) > Current ? "" : ( steps.IndexOf(step) == Current ? "current" :"active"))">@step</li>
        }
    </ul>
</div>

@code{
    // list contenants les différentes étapes en ordre
    [Parameter]
    public ICollection<string> steps { get; set; }
    [Parameter]
    [Bindable]
    public int Current { get; set; }
}