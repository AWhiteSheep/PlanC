@using PlanC.WebApi.Server.DataAccess
@using PlanC.WebApi.Models
@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Buttons
@using Syncfusion.EJ2.Blazor.Data
@* les cdn(s) doivent être ajoutés pour le bon fonctionnement du componant *@

@if (Dpt == null)
{
    <!-- n'est pas encore loader -->
    <p><em>En cours de chargement...</em></p>
}
else
{
    <!-- Boutton qui rend tout les programmes visuelles -->
    <div class="e-float-input" style="width: 200px; display: inline-block;">
        <input type="text" class="rowindex" value="0" ElementReference="@inputRef" />
        <span class="e-float-line"></span>
        <label class="e-float-text">Row Index</label>
    </div>

    <!-- Module table des départements -->
    <EjsGrid @ref="GridDepartement" ModelType="Dpt" DataSource="Dpt" TValue="Department" AllowPaging="true" Locale="fr-FR" Toolbar="@(new[] { "Add", "Edit", "Delete", "Cancel", "Update" })">
        <!-- Template pour afficher les différents programmes dans le départements donné -->
        <GridTemplates>
            <DetailTemplate>
                @{
                    var department = (context as Department);
                    <table class="text-right" width="100%">
                        <thead>
                            <tr>
                                <th> Titre </th>
                                <th> Identifiant </th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Loop sur tous les programmes du département -->
                            @foreach (Tpgm program in department.Tpgm)
                            {
                                <tr>
                                    <td> @program.PgmTitle </td>
                                    <td> @program.PgmId </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </DetailTemplate>
        </GridTemplates>
        <!-- Donne l'accès à la modification des données -->
        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Normal"></GridEditSettings>
        <!-- Affiche en colone les différentes propriétés du département -->
        <GridColumns>
            <GridColumn Field=@nameof(Department.Title) HeaderText="Titre de l'élément" TextAlign="TextAlign.Right" Width="130"></GridColumn>
            <GridColumn Field=@nameof(Department.Policy) HeaderText="Description" TextAlign="TextAlign.Right" Width="200"></GridColumn>
        </GridColumns>
    </EjsGrid>
}

@code {

    [Parameter]
    public bool IsEditable { get; set; } = false;
    public EjsGrid<Department> GridDepartement;
    ElementReference inputRef;
    private readonly PCU001Context _context = new PCU001Context();

    public List<Department> Dpt = PlanC.Web.Client.Data.PCU001FakeContext.Departments;

    // Ouvre tout les tabs pour de la table de département
    public void ExpendAll(ClickEventArgs args)
    {
        this.GridDepartement.DetailExpandAll();
    }
}
