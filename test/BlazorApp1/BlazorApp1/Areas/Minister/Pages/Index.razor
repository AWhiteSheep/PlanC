@page "/minister"
@using BlazorApp1.Data
@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Data

    <div class="container-fluid">
        <div class="col">
            <h1>Administration générale</h1>
            <div class="d-flex justify-content-between flex-sm-row flex-md-column">
                <div class="_header">
                    <p>Gestion des départements et programmes</p>
                </div>
                <div class="_controls">
                    <div class="btn-group btn-group-toggle">
                        @if (toggeDepartment)
                        {
                            <label class="btn btn-secondary active">
                                <input type="checkbox" @bind="toggeDepartment" autocomplete="off" data-toggle="button" /> Departement
                            </label>
                        }
                        else
                        {
                            <label class="btn btn-secondary">
                                <input type="checkbox" @bind="toggeDepartment" autocomplete="off" data-toggle="button" /> Departement
                            </label>
                        }

                        @if (toggeProgramme)
                        {
                            <label class="btn btn-secondary active">
                                <input type="checkbox" @bind="toggeProgramme" autocomplete="off" data-toggle="button" /> Programme
                            </label>
                        }
                        else
                        {
                            <label class="btn btn-secondary">
                                <input type="checkbox" @bind="toggeProgramme" autocomplete="off" data-toggle="button" /> Programme
                            </label>
                        }
                    </div>

                </div>
            </div>
            @if (toggeDepartment)
            {
                <section class="curved-card">
                    <h2>Départements</h2>
                    <hr />
                    <EjsGrid DataSource="GetTdptmnts()" TValue="Tdptmnt" AllowPaging="true" Locale="fr-FR" Toolbar="@(new[] { "Add", "Edit", "Delete", "Cancel", "Update" })">
                        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Normal"></GridEditSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(Tdptmnt.DptmntDesc) HeaderText="Titre de l'élément" TextAlign="TextAlign.Right" Width="130"></GridColumn>
                            <GridColumn Field=@nameof(Tdptmnt.DptmntPlcy) HeaderText="Description" TextAlign="TextAlign.Right" Width="200"></GridColumn>
                        </GridColumns>
                    </EjsGrid>
                </section>
            }
            @if (toggeProgramme)
            {
                <section class="curved-card">
                    <h2>Programmes</h2>
                    <hr />
                    <EjsGrid DataSource="GetTpgm()" TValue="Tpgm" AllowPaging="true" Locale="fr-FR" Toolbar="@(new[] { "Add", "Edit", "Delete", "Cancel", "Update" })">
                        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Normal"></GridEditSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(Tpgm.PgmTitle) HeaderText="Titre de l'élément" TextAlign="TextAlign.Right" Width="130"></GridColumn>
                            <GridColumn Field=@nameof(Tpgm.PgmDesc) HeaderText="Description" TextAlign="TextAlign.Right" Width="200"></GridColumn>
                        </GridColumns>
                    </EjsGrid>
                </section>
            }
        </div>
    </div>
<style>
    .curved-card {
        padding: 15px;
        border: solid black;
        box-shadow: rgba(128, 128, 128, 0.4) inset;
        border-radius: 3px;
    }
</style>
@code {
    bool toggeDepartment = true;
    bool toggeProgramme = true;
    string nActive = "btn btn-secondary";
    string Active = "btn btn-secondary active";


    private readonly PCU001Context _context = new PCU001Context();
    List<Tdptmnt> tdptmnts = new List<Tdptmnt>() { new Tdptmnt() { DptmntDesc = "Informatique", DptmntPlcy = "Retour de livre."} ,
        new Tdptmnt() { DptmntDesc = "Science humaine", DptmntPlcy = "Retour de livre."} };
    Tdptmnt dptmnt = new Tdptmnt();

    List<Tpgm> pgms = new List<Tpgm>() { new Tpgm() { PgmTitle = "Programmation", PgmDesc = "A-Z de la programmation"} ,
        new Tpgm() { PgmTitle = "Physique", PgmDesc = "D'avant à la physique moderne"} };
    Tdptmnt pgm = new Tdptmnt();

    private List<Tdptmnt> GetTdptmnts()
    {
        return tdptmnts;
    }

    private List<Tpgm> GetTpgm()
    {
        return pgms;
    }

    private void HandleValidSubmit()
    {
        Console.WriteLine(dptmnt.DptmntDesc);
    }

}

